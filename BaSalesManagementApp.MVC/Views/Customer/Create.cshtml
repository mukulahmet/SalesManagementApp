@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer
@model BaSalesManagementApp.MVC.Models.CustomerVMs.CustomerCreateVM

@{
    ViewData["Title"] = localizer["Create"];
}



<link href="~/assets/flags/flags.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.min.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="py-3 mb-4">
            <span class="text-muted fw-light">@Html.Raw(localizer["Customer"]) /</span> @Html.Raw(localizer["Create"])
        </h4>
        <div class="row">
            <div class="content-wrapper">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form asp-action="Create">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">@Html.Raw(localizer["Name"])</label>
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="CountryId" class="form-label">@Html.Raw(localizer["Country"])</label>
                                    <select asp-for="CountryId" class="form-control" id="CountryId">
                                        @if (Model != null && Model.Countries != null && Model.Countries.Any())
                                        {
                                            <option value="">@Html.Raw(localizer["SelectCountry"])</option>
                                            foreach (var country in Model.Countries)
                                            {
                                                <option value="@country.Id">@country.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="" disabled selected>@Html.Raw(localizer["NoCountryFound"])</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CountryId" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="CityId" class="form-label">@Html.Raw(localizer["City"])</label>
                                    <select asp-for="CityId" class="form-control" id="CityId">
                                        @if (Model != null && Model.Cities != null && Model.Cities.Any())
                                        {
                                            <option value="">@Html.Raw(localizer["SelectCity"])</option>
                                            foreach (var city in Model.Cities)
                                            {
                                                <option value="@city.Id">@city.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="" disabled selected>@Html.Raw(localizer["NoCityFound"])</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CityId" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Address" class="form-label">@Html.Raw(localizer["Address"])</label>
                                    <input asp-for="Address" class="form-control" />
                                    <span asp-validation-for="Address" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Phone" class="form-label">@Html.Raw(localizer["Phone"])</label>
                                    <br/>
                                    <input asp-for="Phone" type="tel" class="form-control" id="phoneInput" />
                                    <span asp-validation-for="Phone" class="text-danger"></span>
                                    <input type="hidden" id="fullPhoneNumber" name="fullPhoneNumber" />
                                    <input type="hidden" id="selectedCountryIso2" name="selectedCountryIso2" />
                                </div>

                                <div class="mb-3">
                                    <label asp-for="CompanyId" class="form-label">@Html.Raw(localizer["Company"])</label>
                                    <select asp-for="CompanyId" class="form-control">
                                        @if (Model != null && Model.Companies != null && Model.Companies.Any())
                                        {
                                            <option value="">@Html.Raw(localizer["SelectCompany"])</option>
                                            foreach (var company in Model.Companies)
                                            {
                                                <option value="@company.Id">@company.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="" disabled selected>@Html.Raw(localizer["NoCompanyFound"])</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CompanyId" class="text-danger"></span>
                                </div>

                                <div>
                                    <input type="submit" value="@Html.Raw(localizer["Create"])" class="btn btn-primary" />
                                    <a asp-action="Index" class="btn btn-secondary">@Html.Raw(localizer["BackToList"])</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"></script>

<script>
    $(document).ready(function () {
        var phoneInput = $('#phoneInput');
        var userLang = navigator.language || navigator.userLanguage;
        var countryCode = userLang.slice(-2).toLowerCase();
        var iti = intlTelInput(phoneInput[0], {
            separateDialCode: true,
            initialCountry: countryCode,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });


        var fullPhoneNumber = $('#fullPhoneNumber').val();
        var selectedCountryIso2 = $('#selectedCountryIso2').val();
        if (selectedCountryIso2) {
            iti.setCountry(selectedCountryIso2);
        }
        if (fullPhoneNumber) {
            iti.setNumber(fullPhoneNumber);
        }

        $('form').on('submit', function (e) {
            var isValid = iti.isValidNumber();
            const countryData = iti.getSelectedCountryData();
            let phoneNumber = phoneInput.val().replace(/\D/g, '');

            if (!isValid) {
                e.preventDefault();
                alert("Lütfen geçerli bir telefon numarası girin.");
                return;
            }

            if (countryData.iso2 === "tr" && phoneNumber.length !== 10) {
                e.preventDefault();
                alert("Türkiye için telefon numarası 10 haneli olmalıdır.");
                return;
            }

            const formattedNumber = iti.getNumber();
            if (!formattedNumber || !iti.isValidNumber()) {
                e.preventDefault();
                alert("Telefon numarası uluslararası formatta geçerli değil.");
                return;
            }


            $('#fullPhoneNumber').val(formattedNumber);
            $('#selectedCountryIso2').val(countryData.iso2);
        });


        $('#CityId').select2({
            placeholder: '@Html.Raw(localizer["SelectCity"])',
            allowClear: true
        });

        $('#CountryId').select2({
            placeholder: '@Html.Raw(localizer["SelectCountry"])',
            allowClear: true
        });
    });
</script>
